<%- include('../layouts/header.ejs') %>

<style>
   body {
        font-family: 'Arial', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #284b3b; /* Set a different background color */
    }


    .card-container {
       /* Set the height of the card */
        margin: 20px; /* Provide space on all sides of the card */
        padding: 20px;
        border: 2px solid #d9e7e4; /* Add a border to the card with the desired color */
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(206, 23, 23, 0.1);
        background-color: #fff;
    }

    .custom-table {
        display: block;
    }

    .custom-column {
        float: left;
    }

    .custom-column:first-child {
        width: 33.33%; /* Set the width of the first column (4 parts out of 12) */
    }

    .custom-column:last-child {
        width: 66.66%; /* Set the width of the second column (8 parts out of 12) */
    }

    .custom-cell {
        padding: 10px;
        text-align: right; /* Align the content to the right within the cell */
    }

    .custom-menu {
        list-style-type: none;
        padding: 0;
        display: flex;
    }

    .custom-menu-item {
        margin-right: 20px;
    }

    .custom-menu-link {
        text-decoration: none;
        display: flex;
        align-items: center;
        padding: 10px;
        border-radius: 5px;
    }

    .custom-icon {
        margin-right: 10px;
    }

    /* Styles for the second card */
    .second-card-container {
        width: 90%; /* Set the width of the second card (8 parts out of 12) */
        height: auto; /* Set the height of the card */
        margin: 20px; /* Provide space on all sides of the card */
        padding: 20px;
        border: 2px solid #d9e7e4; /* Add a border to the card with the same color as the first card */
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(206, 23, 23, 0.1);
        background-color: #fff;
    }

    /* Styles for the nested card */
    .nested-card {
        width: 100%; /* Set the width of the nested card to 100% */
        height: auto; /* Set the height of the nested card to 100% */
        border: 2px solid #d9e7e4;
        padding: 10px;
        box-sizing: border-box; /* Include padding and border in the total width and height */
        border-radius: 9px;
        margin-top: 5px;
       
    }
    .icon{
        margin-left: 97%;
        cursor: pointer;
    position: relative;
    float: right;
    }
    @media screen and (max-width: 600px) {
    .icon,
    .dropdown-content {
        margin-left: 5%;
    }
}
    .dropdown-content {
    display: none;
    padding: 9px 16px;
    background-color: #f9f9f9;
    min-width: 10px;
   
    z-index: 8;
   float: right;
}

.input-field {
    width: 100%;
    padding: 9px;
    margin-bottom: 20px;
    border: 1px solid #F2F1EB;
    border-radius: 4px;
    box-sizing: border-box;
    outline: none;
    font-size: 14px; }

    .input-field:focus {
    border-color: #f1950b; /* Change the border color when the input is in focus */
}

/* .dropdown-content a {
    padding: 9px 16px;
    text-decoration: none;
  
    color: #333;
} */

/* .dropdown-content a:hover {
    background-color: #f1f1f1;
    margin-left: 97%;
} */
</style>


<style>
    body {
        font-family: 'Arial', sans-serif;
        margin: 0;
        padding: 0;
    }

    .card-container {
       /* Set the height of the card */
        margin: 20px; /* Provide space on all sides of the card */
        padding: 20px;
        border: 2px solid #d9e7e4; /* Add a border to the card with the desired color */
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(206, 23, 23, 0.1);
    }

    .custom-table {
        display: block;
    }

    .custom-column {
        float: left;
    }

    .custom-column:first-child {
        width: 33.33%; /* Set the width of the first column (4 parts out of 12) */
    }

    .custom-column:last-child {
        width: 66.66%; /* Set the width of the second column (8 parts out of 12) */
    }

    .custom-cell {
        padding: 10px;
        text-align: right; /* Align the content to the right within the cell */
    }

    .custom-menu {
        list-style-type: none;
        padding: 0;
        display: flex;
    }

    .custom-menu-item {
        margin-right: 20px;
    }

    .custom-menu-link {
        text-decoration: none;
        display: flex;
        align-items: center;
        padding: 10px;
        border-radius: 5px;
    }

    .custom-icon {
        margin-right: 10px;
    }

    /* Styles for the second card */
    .second-card-container {
        width: 90%; /* Set the width of the second card (8 parts out of 12) */
        height: auto; /* Set the height of the card */
        margin: 20px; /* Provide space on all sides of the card */
        padding: 20px;
        border: 2px solid #d9e7e4; /* Add a border to the card with the same color as the first card */
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(206, 23, 23, 0.1);
    }

    /* Styles for the nested card */
    .nested-card {
        width: 100%; /* Set the width of the nested card to 100% */
        height: auto; /* Set the height of the nested card to 100% */
        border: 2px solid #d9e7e4;
        padding: 10px;
        box-sizing: border-box; /* Include padding and border in the total width and height */
        border-radius: 9px;
        margin-top: 5px;
       
    }
    .icon{
        margin-left: 97%;
        cursor: pointer;
    position: relative;
    float: right;
    }
    @media screen and (max-width: 600px) {
    .icon,
    .dropdown-content {
        margin-left: 5%;
    }
}
    .dropdown-content {
    display: none;
    padding: 9px 16px;
    background-color: #f9f9f9;
    min-width: 10px;
   
    z-index: 8;
   float: right;
}

.my-button {
    padding: 5px 10px;
    background-color: transparent;
    color: #333; /* Dark text color */
    border: 2px solid #333; /* Add a solid border */
    border-radius: 6px; /* Increase border radius for a softer appearance */
    cursor: pointer;
    transition: all 0.3s ease; /* Smooth transition for all properties */
    font-size: 15px; /* Increase font size for better readability */
    font-weight: bold; /* Make text bold */
    text-decoration: none; /* Remove default underline */
    display: inline-block; /* Ensure inline-block display for anchor tags */
}

/* Hover effect */
.my-button:hover {
    background-color: #333; /* Darken the background color on hover */
    color: #fff; /* Change text color to white on hover */
}

/* Focus effect */
.my-button:focus {
    outline: none; /* Remove default focus outline */
    box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.2); /* Add a subtle shadow on focus */
}
</style>

<div class="custom-table">
    <div class="custom-column">
        <div class="card-container">
            <div class="custom-cell">
                <nav class="custom-nav">
                    <ul class="custom-menu">
                        <li class="custom-menu-item">
                            <a href="savedAddress" class="custom-menu-link">
                                <i class="zmdi zmdi-accounts-list-alt"></i>&nbsp;
                                <span>Saved Addresses</span>
                            </a>
                            
                            <a href="accountDetails" class="custom-menu-link">
                                <i class="zmdi zmdi-account"></i>&nbsp;
                                <span>Account details</span>
                            </a>
                            <a href="Orders" class="custom-menu-link">
                                <i class="zmdi zmdi-store"></i>&nbsp;
                                <span >Orders</span>
                            </a>
                            <a href="changePassword" class="custom-menu-link">
                                <i class="zmdi zmdi-key"></i>&nbsp;
                                <span >change password</span>
                            </a>
                            <a href="wallet" class="custom-menu-link">
                                <i class="zmdi zmdi-balance-wallet"></i>&nbsp;
                                <span >wallet</span>
                            </a>
                            <a href="refferalOffer" class="custom-menu-link">
                                <i class="zmdi zmdi-code"></i>&nbsp;
                                <span >Refferal Code</span>
                            </a>
                        </li>
                        <!-- Add more menu items as needed -->
                    </ul>
                </nav>
            </div>
        </div>
    </div>

    <div class="custom-column">
        <div class="second-card-container">
         
                <!-- Content for the nested card -->
             
                <form method="post" id="orderForm">
                    <!-- <h6 class="widget-title border-left mb-10">account Details</h6> -->
                    <div class="login-account p-30 ">

                        <h3 style="font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;">balance: â‚¹<%= wallet.balance %></h3>

 <div class="col-sm-12"><br>
                                <h5></h5>
                                <input type="text"  class="input-field" name="text" placeholder="amount"  >
                                <a href=""></a>                    
                            </form>
                        </div>
                        
                        <button  class="my-button" id="addFundButton" type="button">add fund</button>

                           
                        </div>
                       
                       
                  
                        
                        
                    </div>
                
           
        </div>
    </div>
</div>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.6.7/axios.min.js" integrity="sha512-NQfB/bDaB8kaSXF8E77JjhHG5PM6XVRxvHzkZiwl3ddWCEPBa23T76MuWSwAJdMGJnmQqM0VeY9kFszsrBEFrQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script>
$(document).ready(function() {
    console.log("hereee")
    // Attach click event listener to the "Add Fund" button
    $('#addFundButton').click(function() {
        initiateRazorpayPayment();
    });
});

function initiateRazorpayPayment() {
    console.log("coming here")
    // Retrieve the value of the email input field
    var amount = $('input[name="text"]').val();
    console.log("amount:", amount);
    
    
console.log("1")
    // Parse form data string into key-value pairs
   
console.log("2")
    // Convert form data to object
   

    axios.post("/walletRazorPay",{amount:amount})
        .then(res => {
            if (res.data.success) {
                console.log("success")
                var options = {
                    "key": res.data.key_id, // Enter the Key ID generated from the Dashboard
                    "amount": res.data.order.amount, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
                    "currency": "INR",
                    "name": "Axen", //your business name
                    "description": "Test Transaction",
                   
                    "order_id":res.data.order.id, //This is a sample Order ID. Pass the id obtained in the response of Step 1
        //             "callback_url": "/orderPlaced",
                    handler: function (res) {
		
			console.log('Razorpay payment success:', res);
  
			
            placeOrder(amount)
		  },
                    "prefill": { //We recommend using the prefill parameter to auto-fill customer's contact information especially their phone number
                        "name": "Gaurav Kumar", //your customer's name
                        "email": "gaurav.kumar@example.com",
                        "contact": "9000090000" //Provide the customer's phone number for better conversion rates 
                    },
                    "notes": {
                        "address": "Razorpay Corporate Office"
                    },
                    "theme": {
                        "color": "#3399cc"
                    }
                };
                console.log("options",options)
                var rzp1 = new Razorpay(options);
                console.log("here is it")

               
                     // Call placeOrder function here
                
              
                rzp1.open();
            }
        })
        .catch(error => {
            console.error("Error:", error);
        });
}


function placeOrder(amount){
    console.log("coming or not???")

    axios.post("/addFund", { amount: amount })
            .then(res => {
                            // No action needed here if you don't have any further processing
                })
            .catch(error => {
                 console.error("Error posting order:", error);
                            // Handle the error appropriately if needed
                        });
                    }

</script>

<%- include('../layouts/footer.ejs') %>